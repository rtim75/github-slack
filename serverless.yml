service: github-releases-to-slack

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: go1.x
  region: eu-central-1
  profile: personal
  role: !GetAtt lambdaExecutionRole.Arn
  logRetentionInDays: 7

functions:
  release-checker:
    handler: bin/release-check
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      REPOSITORIES_TABLE: !Ref repositoriesTable
      RELEASES_QUEUE_URL: !Ref releasesQueue
  release-poster:
    handler: bin/release-post
    events:
      - sqs:
          arn: !GetAtt releasesQueue.Arn
          enable: true

resources:
  Resources:
    releasesQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-releases
    repositoriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-repositories
        AttributeDefinitions:
          - AttributeName: repository
            AttributeType: S
        KeySchema:
          - AttributeName: repository
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:provider.stage}-lambda-execution
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Policies:
          - PolicyName: dynamodb
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'dynamodb:Scan'
                    - 'dynamodb:PutItem'
                  Resource: !GetAtt repositoriesTable.Arn
                - Effect: Allow
                  Action:
                    - 'sqs:SendMessage'
                    - 'sqs:ReceiveMessage'
                    - 'sqs:DeleteMessage'
                    - 'sqs:GetQueueAttributes'
                  Resource: !GetAtt releasesQueue.Arn

package:
  exclude:
    - ./**
  include:
    - ./bin/**